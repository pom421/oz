// @ts-ignore

import { assign, createMachine } from "xstate";

type Page1Schema = any
type Page2Schema = any

type Declaration = { page1: Page1Schema; page2: Page2Schema }

export const declarationMachine =
  /** @xstate-layout N4IgpgJg5mDOIC5QTAYwDYEMBOmAuAlgPYB2AspqgBYElgB0AMkZhLVAAQoY77EkBiCKQa0AbkQDWDbllyFSFarQbNW7Lmjl9SCcUVQ6SAbQAMAXUSgADkVgEFJKyACeiAJwA2ADQgAHogAzIEALPSmngAckaYAjJEA7O7RAEyRAL7pvrK8jko0dEwsbCScOfL8AmDY2ETY9NZYeABmdQC29OVG+SpF6qWaPBW6+oaOZpZIILb2js4BCCmm9JGe7rEArO6hIZ4b8SGRvm6Lse70IbG7oaYblzGmGVkgXXmUBQwAylREAO4aYD8BFghFK9G+fw0zQI2BBHGsmBgHFoHGwAHoiBw2kQUAJqEQ7GBUWAxMD+BwQfgAK7wKYzBz8eaIFIpFbuBKxTkJOIpQ4hdzHRCxUws+gJFKBWKSzyBSKSjaeTLZLS5fg9QoQ-4DQHA0FQcE-LWcaGwvDwxFElHozHY3F0Px4Zz0uZTBaBXn0YXudnykIRSLuEKChCeeL0TymfleM7i90JJUvFXDcjvXqagFAkHsA2QgYIpEpZEkVEYrE4sACazYEnEGlOuwM0hMhDS8IywIi-YJBIhQIbYNRWL0QIJd1bR7bcUhBOvNWpwoAYWrfAGdF+OaNHBNcPzluLvzLuOEhX00k6Se684YS7AK84a43UJhO4tRY4B9tYD0JAkY34E3rWZGVdIUJWWQNVkeXtDhSWIfFcRANm5eh9ild0R22UxAhnC83mURdlz1DgH3TPNX0LFEP3LStq1JIg6zpBsXVABZNnFcMJUCdsYg2SINkCYNLlZDtIw5OJ1g5HChkvfDr0IjQSMNJ9TXNJErVLT8BHtR1GKApsQIQK4+LZWU-RlEIEn2ASEIQITh1MSNLliWDJQlRVnlnRQr3oG872IsB11I41nzNXc32tQ8K1tAhmhOGwmOAlihT9QIxU2S4QhCCVhSSQTnPs0ThTOWJJI83C51knz5NXALHwGbdQtfapamrCABD8Sk8AYTBmi67AAAoNgcgBKIRyq8yrfKIxTc2ClSwuaupIEAxsnAM4U0noQN3FgrKFSGzwgxs2DPGHXlIi9Q7TASGV3OVaS8I+egACUa3sbVMz1Oq5pfNT90ioQRHoU8ZHGlNKte0l3s4HUszBIKtxC1S93fSLv1-IwAN01bmx7MJ-V5MCpW2I6TmFGJPT9OUA0c253Ck7RHt6SGyQ+3VswRhrkbfKjcUW+pGnwVpsA6TzwaelnoY4WGvs5pGwsotHRkxiwVuY-xEK8C5AnZBJIl7TibuDYVgnDb0rm5W6LoZ1UJolt6M3Z+GlLIpFYnCjTyw4Dg-D8LTAR0+K9LWpKEF1sUQg2FJ3GuizHiiY3blSqJogVLC9aSG3k3VBhJcduH9QRsL3fUm0vZ9v3otitXEo1hAA1SqOzguuV3F4krgy8DZtd2H1zv4u7Eweir7ah-PZZdn7GqRfnIHazrut66pBpGsbh7t5mHbZgvvsR+ampqJaIBr-TQ8jodRwjfYsM8dt2UT021nWOOrdiLOZNH1mYc+jnJ+5ij-qaWPKIH8UhQbr3FpvMe28J6zX-jzJWoC-ykCxkHHG61NhDmSCkLYI4Ix6wTjZTkUQxQih1khO4foWTvyZoUPOMDf5wLCgA1Gml+YNCaMLUWYMc4vS3t-J2hc-7MIQZ+dGBgVaTDQerViOChxbEDBGTCUdMqJ1HGKVYMckJyjiLcGhI8oFf2lj-Z2TDyKiOolWGs9FaTSNrqxW4kRwibFlNdJIqwsrG05MsRIXEoijgDFKDY+iN50P4cYwRu8RGzzah1PA+BF59RXqYUaYteH0IETvIu5iYknxDnXKUHpHhSm7LcTshxO6wXCIcJC6U1iHXjAmEg5ZbFD0ZgYwoagShlDBnk5sphO6DzSd5BGMtGGbi5grYsEVPx9IMqEFC3ZuwbH4jg6+CQBz5QjBKUcZwtjRCePddpoSvh-zGaYzcIjS6RTmWfKp9xtiSjwTdfsNlQysm2X46Oh1IhpBCZAjUZyTFQFuQU5YSElkrLHOs6yJw7jLFDH6Gp0cKGNKObbAFqhigaDFtLQ+rVQULAGcdCmEQHIBKjvxGOQyeHeSmgpWqct95-VYeWQloEUgJAuFcG+XE7gKg2UQ704YtiWSWJKZy+z-m8PpTVQKwjzGK1mdjGRQoKHDkshZTleyZTBhZN3TBwRMpRxZOKYJZUIEyuqveRlf9Jmvmucquxp8ClDXAjyyU0RLJ8UFXCw6KFHjihjlKS4WxpV0utf5eVcD7Uz3xctFV9iPCbHDA8JYAYHgVOOsKyOgaTbugiJHcNk1I1rnZfXdYqaHLpuSA5LNZNOXhg5JHUpiR+TOWLZ-KW5yhExvlg6wBbLE0uoWHcLl3riHsiGj2WIndHiU3ZNsNIHIljmvRdnbyGSIlZIVW7D2ZcUDe19uWh4GqohbF2CVGOpMhRwQ+d6G6dM5RKM7YY7twLd6xqJLk4d+TR0LMuA5HWXcYxHCIXes27Ir7JC4qYemFrjmYr4dAzJsDLmKsHSgctJt5F3HiEnTl0dYXJtSsuzw3ZgiLriK+sJKHt1oY0NE+Nx9f3NiuJcC4kZAwskDAPeCZNvErFvlsFZxM9bTgQxi9J4Se3lqyuO2D18-GUd9YgZ9npEWWSjiKNCNGwDloALS8j1fjLkODuxEcOORzImQgA */
  createMachine(
    {
      context: {
        errorMessage: undefined as string | undefined,
        declaration: {} as Declaration,
        status: undefined as "creation" | "revision" | "consultation",
        mode: undefined as "write" | "readonly",
      },
      tsTypes: {} as import("./declarationMachine.typegen").Typegen0,
      schema: {
        services: {} as {
          loadDeclaration: {
            data: Declaration
          }
          submitPage1: {
            data: Page1Schema
          }
          submitPage2: {
            data: Page2Schema
          }
        },
        // events: {} as { type: "string" },
      },
      id: "declarationMachine",
      initial: "Loading declaration",
      states: {
        "Loading declaration": {
          invoke: {
            src: "loadDeclaration",
            onDone: [
              {
                cond: "Is existing declaration",
                target: "Showing existing",
              },
              {
                actions: "assignCreationStatus",
                target: "Creating new",
              },
            ],
            onError: [
              {
                target: "Loading declaration errored",
              },
            ],
          },
        },
        "Showing existing": {
          initial: "Showing first page in r/o mode",
          states: {
            "Showing first page in r/o mode": {
              on: {
                "choose revision status": {
                  target: "#declarationMachine.Revising existing",
                },
                next: {
                  target: "Showing page 2 in r/o mode",
                },
              },
            },
            "Showing page 2 in r/o mode": {
              on: {
                previous: {
                  target: "Showing first page in r/o mode",
                },
              },
            },
          },
        },
        "Loading declaration errored": {},
        "Creating new": {
          initial: "Showing first page in w mode",
          states: {
            "Showing first page in w mode": {
              invoke: {
                src: "submitPage1",
                onDone: [
                  {
                    cond: "validation is ok",
                    target: "Showing first page in r/o mode",
                  },
                  {
                    target: "Showing first page errored",
                  },
                ],
              },
            },
            "Showing page 2 in w mode": {
              on: {
                previous: {
                  target: "Showing first page in r/o mode",
                },
              },
            },
            "Showing first page in r/o mode": {
              on: {
                next: {
                  target: "Showing page 2 in w mode",
                },
                modify: {
                  target: "Showing first page in w mode",
                },
              },
            },
            "Showing first page errored": {
              after: {
                "500": {
                  target: "Showing first page in w mode",
                },
              },
            },
          },
        },
        "Revising existing": {
          initial: "Showing first page in w mode",
          states: {
            "Showing first page in w mode": {
              invoke: {
                src: "submitPage1",
                onDone: [
                  {
                    actions: "assignDataPage1",
                    target: "Showing page 1 in r/o mode  xx",
                  },
                ],
                onError: [
                  {
                    target: "Showing first page errored",
                  },
                ],
              },
            },
            "Showing page 1 in r/o mode  xx": {
              on: {
                next: {
                  target: "Showing page 2 in w mode",
                },
                modify: {
                  target: "Showing first page in w mode",
                },
              },
            },
            "Showing first page errored": {
              after: {
                "500": {
                  target: "Showing first page in w mode",
                },
              },
            },
            "Showing page 2 in w mode": {
              invoke: {
                src: "submitPage2",
                onDone: [
                  {
                    target: "Showing page 1 in r/o mode  xx",
                  },
                ],
                onError: [
                  {
                    target: "Showing page 2 errored",
                  },
                ],
              },
              on: {
                previous: {
                  target: "Showing page 1 in r/o mode  xx",
                },
              },
            },
            "Showing page 2 errored": {
              after: {
                "500": {
                  target: "Showing page 2 in w mode",
                },
              },
            },
          },
        },
      },
    },
    {
      actions: {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        assignCreationStatus: assign((context, event) => {
          return {
            status: "creation" as const,
          }
        }),
        assignDataPage1: assign((context, event) => {
          return {
            declaration: {
              page1: event.data,
            },
          }
        }),
      },
    },
  )
